Thu Jan 30 04:03:03 UTC 2025
Linux LinuxMachine 5.15.167.4-microsoft-standard-WSL2 #1 SMP Tue Nov 5 00:21:55 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux
uid=1000(cssuwbstudent) gid=1000(cssuwbstudent) groups=1000(cssuwbstudent),10(wheel)
=====================================================
1. If the section below is empty, the program compiles 
   without warnings with -Wall -Wextra flags
=====================================================
=====================================================
2. If the section below is empty or has the expected output 
    the program puns and produces correct output
=====================================================
Starting test01
Ending tes01
Starting test02

            _________[x=10]_________            
      ___[f=5]____            ___[z=50]___      
   _[b=3]      __N___      __N___      __N___   
  N    [e=4]  N     N     N     N     N     N   

[TestBST] Testing inorder traversal
printing order: [b=3][e=4][f=5][x=10][z=50]
[TestBST] Testing preorder traversal
printing order: [x=10][f=5][b=3][e=4][z=50]
[TestBST] Testing postorder traversal
printing order: [e=4][b=3][f=5][z=50][x=10]
Ending test02
Starting test03
Ending test03

            _______[lease=6]________            
      _[hello=10]_            _[like=30]__      
   [heal=3]      [herd=5]      [lerp=2]      [look=20]   
  N     N   [help=20][hertz=7][lemon=10]  N     N     N   

=====================================================
3. If the section below is empty, then there are no clang-tidy warnings 
   (ignore warnings from system headers, such as "13554 warnings generated.")
=====================================================
17463 warnings generated.
33740 warnings generated.
50539 warnings generated.
67499 warnings generated.
81748 warnings generated.
96269 warnings generated.
Suppressed 96269 warnings (96269 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
=====================================================
4. If the section below is empty, clang-format does not find any formatting issues
   You can fix formatting errors using "clang-format -i <filename>" on command line
=====================================================
Running clang-format on ./autocomplete.cpp
Running clang-format on ./bstmap.cpp
Running clang-format on ./bstmapprinter.cpp
Running clang-format on ./main.cpp
Running clang-format on ./testac.cpp
Running clang-format on ./testbst.cpp
=====================================================
5. If there are any memory leaks, it should be in the output below
=====================================================
=====================================================
6. Using valgrind to check for memory leaks
   Check for "definitely lost" in the output below
=====================================================
==97477== Memcheck, a memory error detector
==97477== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==97477== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==97477== Command: ./a.out
==97477== Parent PID: 96998
==97477== 
==97477== 
==97477== HEAP SUMMARY:
==97477==     in use at exit: 0 bytes in 0 blocks
==97477==   total heap usage: 30,134 allocs, 30,134 frees, 3,297,596 bytes allocated
==97477== 
==97477== All heap blocks were freed -- no leaks are possible
==97477== 
==97477== For lists of detected and suppressed errors, rerun with: -s
==97477== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
Thu Jan 30 04:04:44 UTC 2025
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================
